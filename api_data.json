[  {    "type": "post",    "url": "/bank-accounts",    "title": "Save",    "name": "CreateBankAccount",    "description": "<p>Bank accounts are assets that contain bank information, like the IBAN and the bank account owner. This is required in order to process a Bank wire pay out. The bank account needs to be owned or co-owned by the user owner the debitedWallet, otherwise, all bank wire pay outs will be declined.</p>",    "group": "BankAccounts",    "version": "2.0.0",    "parameter": {      "fields": {        "Request message body": [          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "owner",            "description": "<p>Id of the user that can use this bank account.</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "iban",            "description": "<p>IBAN of the bank account</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "ownerMetaName",            "description": "<p>Full name of the owner of the bank account</p>"          },          {            "group": "Request message body",            "type": "Object",            "optional": false,            "field": "ownerMetaAddress",            "description": "<p>Address of the owner of the bank account</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "ownerMetaAddress.street",            "description": "<p>Street of the owner of the bank account</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "ownerMetaAddress.city",            "description": "<p>City of the owner of the bank account</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "ownerMetaAddress.region",            "description": "<p>Region of the owner of the bank account</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "ownerMetaAddress.postalCode",            "description": "<p>Postal code of the owner of the bank account</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data._id",            "description": "<p>The id of the bank account. Use this to make a Bank wire Pay out.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.owner",            "description": "<p>The id of the user</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.ownerMetaName",            "description": "<p>The full name of the of the owner of the bank account</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.ownerMetaAddress",            "description": "<p>The address of the of the owner of the bank account</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.ownerMetaAddress.street",            "description": "<p>The street of the of the owner of the bank account</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.ownerMetaAddress.city",            "description": "<p>The city of the of the owner of the bank account</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.ownerMetaAddress.region",            "description": "<p>The region of the of the owner of the bank account</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.ownerMetaAddress.postalCode",            "description": "<p>The postalCode of the of the owner of the bank account</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.iban",            "description": "<p>IBAN of the owner of the bank account</p>"          }        ]      }    },    "filename": "app/routes/server-api/bank-accounts.js",    "groupTitle": "BankAccounts",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/",    "title": "Get Domain info",    "name": "GetDomain",    "description": "<p>Get details about the current client configuration (domain).</p>",    "group": "Extra",    "version": "2.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.name",            "description": "<p>The name of the domain.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.email",            "description": "<p>Email of the admin of the domain.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.legalUser",            "description": "<p>The legal user id associated to the domain (if present).</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.fee",            "description": "<p>An object containing the fee definitions of the domain.</p>"          }        ]      }    },    "filename": "app/routes/server-api/domains.js",    "groupTitle": "Extra",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/images/signature",    "title": "Get Signature",    "name": "GetImageSignature",    "description": "<p>Get a image signature. This is necessary for uploading images.</p>",    "group": "Images",    "version": "2.0.0",    "parameter": {      "fields": {        "Request url parameter": [          {            "group": "Request url parameter",            "type": "String",            "optional": false,            "field": "assetClass",            "description": "<p>The class of the asset that will be used for the image upload (&quot;users&quot; or &quot;wallets&quot;).</p>"          },          {            "group": "Request url parameter",            "type": "String",            "optional": false,            "field": "assetId",            "description": "<p>The ID of the asset.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.api_base_url",            "description": "<p>The URL were you'll need to upload the images</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.signature",            "description": "<p>The signature needed for the upload image step</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.timestamp",            "description": "<p>The timestamp needed for the upload image step</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.transformation",            "description": "<p>The transformation instructions, needed for the upload image step</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.public_id",            "description": "<p>The public id of the new images, needed for the upload image step</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.api_key",            "description": "<p>The api key code, needed for the upload image step</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.moderation",            "description": "<p>If your domain in configured to enforce image moderation, you'll get this key in the response, take the string value and pass it as is to the upload image step.</p>"          }        ]      }    },    "filename": "app/routes/server-api/images.js",    "groupTitle": "Images",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/images/save",    "title": "Save image",    "name": "SaveImage",    "description": "<p>Saves an images in GrowishPay after uploading it to the third party provider in the Upload image step.</p>",    "group": "Images",    "version": "2.0.0",    "parameter": {      "fields": {        "Request body parameter": [          {            "group": "Request body parameter",            "type": "String",            "optional": false,            "field": "assetClass",            "description": "<p>The class of the asset that will be used for the image upload (&quot;users&quot; or &quot;wallets&quot;).</p>"          },          {            "group": "Request body parameter",            "type": "String",            "optional": false,            "field": "assetId",            "description": "<p>The ID of the asset.</p>"          },          {            "group": "Request body parameter",            "type": "String",            "optional": false,            "field": "public_id",            "description": "<p>The ID of the asset obtained in the Upload image step.</p>"          },          {            "group": "Request body parameter",            "type": "String",            "optional": false,            "field": "bytes",            "description": "<p>The size of the asset obtained in the Upload image step.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data._id",            "description": "<p>The id of the image. You can now use this id to modify the original asset and add the image.</p>"          }        ]      }    },    "filename": "app/routes/server-api/images.js",    "groupTitle": "Images",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "see_get_signature_method",    "title": "Upload Image",    "name": "UploadImage",    "description": "<p>Uploads an image to a third party provider. <br /><br /><span style=\"color: red\">Note 1: This is third party provider, <strong>DO NOT send your GrowishPay API credentials!</strong></span> <br /><span style=\"color: red\">Note 2: Contrary to how GrowishPay API works, this method need to be invoke using <strong>FORM-DATA</strong></span><br /></p>",    "group": "Images",    "version": "2.0.0",    "parameter": {      "fields": {        "Request body parameter": [          {            "group": "Request body parameter",            "type": "File",            "optional": false,            "field": "file",            "description": "<p>The blob of the image.</p>"          },          {            "group": "Request body parameter",            "type": "String",            "optional": false,            "field": "signature",            "description": "<p>The signature obtained in the Get Signature step.</p>"          },          {            "group": "Request body parameter",            "type": "String",            "optional": false,            "field": "timestamp",            "description": "<p>The timestamp obtained in the Get Signature step.</p>"          },          {            "group": "Request body parameter",            "type": "String",            "optional": false,            "field": "transformation",            "description": "<p>The transformation instructions obtained in the Get Signature step.</p>"          },          {            "group": "Request body parameter",            "type": "String",            "optional": false,            "field": "public_id",            "description": "<p>The public id of the new images obtained in the Get Signature step.</p>"          },          {            "group": "Request body parameter",            "type": "String",            "optional": false,            "field": "api_key",            "description": "<p>The api key code obtained in the Get Signature step.</p>"          },          {            "group": "Request body parameter",            "type": "String",            "optional": false,            "field": "moderation",            "description": "<p>The moderation value obtained in the Get Signature step. If your domain does not enforce image moderation do not provide the key.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "public_id",            "description": "<p>The confirmation of the public, needed for the Save image step.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "bytes",            "description": "<p>The size of the image, needed for the Save image step.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "moderation",            "description": "<p>If your domain is configured to enforce image moderation, you'll get information about the moderation in this object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "moderation.status",            "description": "<p>accepted: The image upload is accepted<br />rejected: The image upload is rejected. See moderation.response for more details.</p>"          }        ]      }    },    "filename": "app/routes/server-api/images.js",    "groupTitle": "Images"  },  {    "type": "post",    "url": "/payins/bankwire",    "title": "Bank wire",    "name": "CreateBankWirePayIn",    "description": "<p>Creates a new bank wire Pay in promise</p>",    "group": "PayIns",    "version": "2.0.0",    "parameter": {      "fields": {        "Request message body": [          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "creditedWallet",            "description": "<p>Wallet id of credited wallet</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "creditedUser",            "description": "<p>User id of credited user (owner of the credited wallet)</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "debitedUser",            "description": "<p>User id of debited user (The user making the payment)</p>"          },          {            "group": "Request message body",            "type": "Number",            "optional": false,            "field": "amount",            "description": "<p>The amount in cents of the transaction</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.transactionId",            "description": "<p>The id of the generated transaction. You need this ID to ask for updates on the promise (See Get Transaction)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.bankAccount",            "description": "<p>The owner bank account details to which the declared amount is to be paid</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.bankAccount.address",            "description": "<p>The address of the owner bank account</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.bankAccount.name",            "description": "<p>The name of the owner bank account</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.bankAccount.iban",            "description": "<p>The IBAN of the owner bank account</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.bankAccount.bic",            "description": "<p>The BIC of the owner bank account</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.wireReference",            "description": "<p>This value must be specified in the detail of the bank transfer</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "data.amount",            "description": "<p>The amount in cents of the transfer</p>"          }        ]      }    },    "filename": "app/routes/server-api/payins-bankwire.js",    "groupTitle": "PayIns",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/payins/cc",    "title": "Credit card",    "name": "CreditCardPayIn",    "description": "<p>Creates a new credit card Pay in promise</p>",    "group": "PayIns",    "version": "2.0.0",    "parameter": {      "fields": {        "Request message body": [          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "creditedWallet",            "description": "<p>Wallet id of credited wallet</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "creditedUser",            "description": "<p>User id of credited user (owner of the credited wallet)</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "debitedUser",            "description": "<p>Wallet id of debited user (The user paying with the credit card)</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "returnURL",            "description": "<p>A valid URL where to redirect the user after the payment is completed. Keep in mind, a query parameter will be added to your returnURL indicating a transactionId. You can use the value to identify the transaction when your user gets redirected.</p>"          },          {            "group": "Request message body",            "type": "Number",            "optional": false,            "field": "amount",            "description": "<p>The amount in cents of the transaction</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.transactionId",            "description": "<p>The id of the generated transaction. You need this ID to ask for updates on the promise (See Get Transaction)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.redirectURL",            "description": "<p>The URL of the EPOS were you must redirect your user</p>"          }        ]      }    },    "filename": "app/routes/server-api/payin-cc.js",    "groupTitle": "PayIns",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/payins/generic",    "title": "Generic Credit",    "name": "GenericPayIn",    "description": "<p>Creates a generic credit pay in. Generic credits payins are not supported by electronic money, they are instead a means to securely store transactions supported by your system in a Growishpay ledger. For example, cash transactions handled in person by your clients, credit card transactions done in a external POS, Gift cards, vouchers, checks or any other exchangeable value. Use &quot;amount&quot; to indicate the value, and is also highly recommended to use the &quot;tag&quot; field with a value that makes sense in your platform, so you eventually track the transaction in the future. <br /><br />Like all transactions, generic credit transactions when stored, become immutable, they cannot be modified or deleted. If you <a href=\"#api-Wallets-GetWallet\">GET a wallet</a>, you'll get &quot;genericCreditAmount&quot; as the total of currently available generic credit funds, &quot;genericCreditCollectedAmount&quot; as the total of collected generic credits funds. <strong>Be aware that &quot;amount&quot; and &quot;collectedAmount&quot; will only count funds from NON generic transactions</strong>. If you get the <a href=\"#api-Wallets-GetWalletStatement\">wallet Statement</a> , generic credit payin transactions will be identified by type === 8, payout generic credit transactions with type === 9 and generic credit transfers with type === 10.</p> <h2>Giftcard/voucher use case</h2> You can register giftcards or vouchers in a wallet ledger, as a mean of payins for the wallet. Use the amount to indicate the value the giftcard represented in the currency of the wallet and add a tag useful to your system that allows it to identify the transaction as a giftcard, for example: tag = giftcard-:id (Do not add sensitive information in the tag) <br/> By querying the wallet you'll get the total collected by your client, and if you need more details you can get the statement filtering by type === 8. When your client is ready to utilize the giftcards, you have to approaches, you can do a <a href=\"#\">generic credit payout</a> that will create a payout transaction (the credit is exiting the payment circuit) representing the user consumed the credit, or you can do a <a href=\"#\">generic credit transfer</a> and that will create a transfer of the credit between wallets, meaning the user gifted the credited, the user did a chargeback, or you want to accumulate the credit in your <a href=\"#\">Fee Wallet</a> or any other wallet created for your <a href=\"#\">Legal User</a>.",    "group": "PayIns",    "version": "2.0.0",    "parameter": {      "fields": {        "Request message body": [          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "creditedWallet",            "description": "<p>Wallet id of credited wallet</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "creditedUser",            "description": "<p>User id of credited user (owner of the credited wallet)</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "debitedUser",            "description": "<p>Wallet id of debited user (The user paying)</p>"          },          {            "group": "Request message body",            "type": "Number",            "optional": false,            "field": "amount",            "description": "<p>The amount in cents of the transaction</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "tag",            "description": "<p>A text tag useful for identifying the transaction in you system. Do not share sensitive information in this field since in some cases it could be public (Ex. Statements required by webapp users)</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.transactionId",            "description": "<p>The id of the generated transaction.</p>"          }        ]      }    },    "filename": "app/routes/server-api/payins-generic.js",    "groupTitle": "PayIns",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/payouts/bankwire",    "title": "Bank wire",    "name": "CreateBankWirePayOut",    "description": "<p>Creates a new bank wire Pay out promise. <br/><strong style=\"color:red;\">KYC AUTHENTICATION IS NEEDED</strong></p>",    "group": "PayOuts",    "version": "2.0.0",    "parameter": {      "fields": {        "Request message body": [          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "bankAccount",            "description": "<p>Id of the bank account. This bank account needs to be owned by owner of the debited wallet.</p>"          },          {            "group": "Request message body",            "type": "Number",            "optional": false,            "field": "amount",            "description": "<p>Amount of the transaction</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "debitedWallet",            "description": "<p>Id of the debited wallet.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.transactionId",            "description": "<p>The id of the generated transaction. You need this ID to ask for updates on the promise (See Get Transaction)</p>"          }        ]      }    },    "filename": "app/routes/server-api/payouts-bankwire.js",    "groupTitle": "PayOuts",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/transactions/:id",    "title": "Get",    "name": "GetTransaction",    "description": "<p>Get a transaction by ID. Each time you create a Pay in, a Pay out or a transfer you generate a single asset called Transaction.</p>",    "group": "Transactions",    "version": "2.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "data.status",            "description": "<p>The status of the transaction. <br> 0 - The transaction is created and attending to be completed. <br> 1 - The transaction is succeeded. <br> 2 - The transaction failed. See resultMessage for verbose error details.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "data.type",            "description": "<p>The type of the transaction. <br> 0 - Transfer. Funds moved between wallets. <br> 1 - PayIn with credit card. <br> 2 - PayIn with bank wire. <br> 3 - PayOut with bank wire. <br> 4 - A transaction fee collected from the debited wallet.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "data.amount",            "description": "<p>The amount in cents.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.currency",            "description": "<p>Transaction currency. <br>EUR: Euro. (default)<br>GBP: Pound Sterling.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.creditedWallet",            "description": "<p>Wallet id of credited wallet.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.creditedUser",            "description": "<p>User id of credited user (owner of the credited wallet).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.debitedUser",            "description": "<p>Wallet id of debited user.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.debitedWallet",            "description": "<p>Wallet id of debited wallet.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.resultMessage",            "description": "<p>Verbose information about the result of the transaction if available.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.fee",            "description": "<p>If the transaction is subjected to fees this object contains information about it.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.fee.amount",            "description": "<p>Amount of the fee taken.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.fee.transaction",            "description": "<p>Id of the transaction used to collect the fee.</p>"          }        ]      }    },    "filename": "app/routes/server-api/transactions.js",    "groupTitle": "Transactions",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/transfers",    "title": "Save",    "name": "CreateTransfer",    "description": "<p>A Transfer is a request to relocate e-money from one wallet to another wallet.</p>",    "group": "Transfers",    "version": "2.0.0",    "parameter": {      "fields": {        "Request message body": [          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "creditedWallet",            "description": "<p>Wallet id of credited wallet</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "debitedWallet",            "description": "<p>Wallet id of debited wallet</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "debitedUser",            "description": "<p>Wallet id of debited user (The user doing the transfer. Must be the owner of the debitedWallet)</p>"          },          {            "group": "Request message body",            "type": "Number",            "optional": false,            "field": "amount",            "description": "<p>The amount in cents of the transfer</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.transactionId",            "description": "<p>The id of the generated transaction. Compared to Credit card payins and Bank wire payins, transfers are atomic, so if you get a 200 response you can assume the funds were relocated successfully.</p>"          }        ]      }    },    "filename": "app/routes/server-api/transfers.js",    "groupTitle": "Transfers",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users/:id",    "title": "Get",    "name": "GetUser",    "description": "<p>Get user details.</p>",    "group": "Users",    "version": "2.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>User asset (see Save user for response reference)</p>"          }        ]      }    },    "filename": "app/routes/server-api/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/rpc-get-user-by-email",    "title": "Get User by Email",    "name": "GetUserByEmail",    "description": "<p>In some cases it could be useful to recover the user profile by the email</p>",    "group": "Users",    "version": "2.0.0",    "parameter": {      "fields": {        "Query String": [          {            "group": "Query String",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>The user email</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>The user profile (see Get User for response reference)</p>"          }        ]      }    },    "filename": "app/routes/server-api/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users/:userId/wallets",    "title": "Get user's wallets",    "name": "GetUsersWallets",    "description": "<p>Get the wallets owned by a user</p>",    "group": "Users",    "version": "2.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>An array of user's wallets (see Get Wallet for response reference)</p>"          }        ]      }    },    "filename": "app/routes/server-api/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users/:userId/rpc-get-wallets-contributed",    "title": "Get participated wallets",    "name": "GetUsersWalletsContributed",    "description": "<p>Get a list of wallets were the indicated user has contributed at least once</p>",    "group": "Users",    "version": "2.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>An array wallets (see Get Wallet for response reference)</p>"          }        ]      }    },    "filename": "app/routes/server-api/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users",    "title": "List",    "name": "ListUsers",    "description": "<p>Get a list of your users, paginated and sorted by createdAt. <br/><strong style=\"color:red;\">This method is not intended for regular use, usage rates are heavily limited. Use only for debug.</strong></p>",    "group": "Users",    "version": "2.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>An array of users (see Get User for response reference)</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pagination",            "description": ""          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "pagination.perPage",            "description": "<p>Number of items per page.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "pagination.total",            "description": "<p>Number of items total.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "pagination.page",            "description": "<p>The current page.</p>"          }        ]      }    },    "filename": "app/routes/server-api/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    },    "parameter": {      "fields": {        "Query String": [          {            "group": "Query String",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>The desired result page starting from 0.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/rpc-get-user-identity-proof/:userId",    "title": "Get user identity proof",    "name": "RPCGetUserIdentity",    "description": "<p>Get the user current identity proof.</p>",    "group": "Users",    "version": "2.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.user",            "description": "<p>User id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "data.status",            "description": "<p>Verification process status. <br /><strong>0</strong>: Document ready for verification. <br /><strong>1</strong>: The document in being reviewed. <br /><strong>2</strong>: Document approved. <br /><strong>3</strong>: Document refused.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.refusedReason",            "description": "<p>I case of document refused, you'll find a verbose explanation here.</p>"          }        ]      }    },    "filename": "app/routes/server-api/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/rpc-send-user-identity-proof/:userId",    "title": "Send user identity proof",    "name": "RPCSendUserIdentity",    "description": "<p>In order to make pay outs, you have to send some documents through the API to authenticate the user. It's compulsory for any payout amount in order to fight fraud, money laundering and financing of terrorism. You need to do this only once per user if its gets approved, and you'll see the KYC key in your user getting updated to TRUE. <br /><br />If the request gets rejected you can send a new one. Keep in mind the approval process could take up to 3 days and rejections due to sending incorrect/expired documents and blurry pictures could raise penalties in your account. (please contact your Growishpay consultant for more information) <br /><br /><strong>Please note the different content type header</strong></p>",    "group": "Users",    "version": "2.0.0",    "parameter": {      "fields": {        "Request message body": [          {            "group": "Request message body",            "type": "File",            "optional": false,            "field": "firstPage",            "description": "<p>First page of document. <br />Max. document size: 2 MB. <br />Accepted types: JPG, PNG, PDF.</p>"          },          {            "group": "Request message body",            "type": "File",            "optional": true,            "field": "secondPage",            "description": "<p>Second page of document <br />Max. document size: 2 MB. <br />Accepted types: JPG, PNG, PDF.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.user",            "description": "<p>User id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.status",            "description": "<p>Verification process status. (see Get user identity proof for values references)</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "400/BadRequest",            "description": "<p>Invalid payload supplied.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "403/Forbidden",            "description": "<p>Required field [...] omitted.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    },    "filename": "app/routes/server-api/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          },          {            "group": "Header",            "optional": false,            "field": "Content-Type",            "description": "<p>multipart/form-data</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/users",    "title": "Save",    "name": "SaveUser",    "description": "<p>Save new user</p>",    "group": "Users",    "version": "2.0.0",    "parameter": {      "fields": {        "Request message body": [          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>User name</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "surname",            "description": "<p>User surname</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "birthDate",            "description": "<p>User birthDate (format YYYY-MM-DD)</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data._id",            "description": "<p>User id</p>"          },          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "data.kyc",            "description": "<p>User KYC status. In order to do payouts the user needs to have this field as true. See &quot;Send user identity proof&quot; for more information.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.name",            "description": "<p>User name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.surname",            "description": "<p>User surname</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.birthDate",            "description": "<p>User birth date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.email",            "description": "<p>User email</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200\n{\n \"code\": 200,\n \"data\": {\n     \"kyc\": false,\n     \"_id\": \"5eda4fbf6f1e5874d2df7cf5\",\n     \"name\": \"Name\",\n     \"surname\": \"Surname\",\n     \"birthDate\": \"1999-01-07T15:39:05.122Z\",\n     \"email\": \"email@mail.com\",\n     \"updatedAt\": \"2020-06-05T13:59:27.592Z\",\n     \"createdAt\": \"2020-06-05T13:59:27.592Z\"\n },\n \"requestTime\": \"194ms\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "400/BadRequest",            "description": "<p>Invalid payload supplied.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "403/Forbidden",            "description": "<p>Required field [...] omitted.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      },      "examples": [        {          "title": "Bad Request",          "content": "HTTP/1.1 400 Bad Request\n{\n     \"code\": 400,\n     \"message\": \"Utente gia registrato con questo email\",\n     \"requestTime\": \"187ms\"\n}",          "type": "json"        },        {          "title": "Unauthorized",          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"code\": 401,\n    \"requestTime\": \"1ms\"\n}",          "type": "json"        }      ]    },    "filename": "app/routes/server-api/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    }  },  {    "type": "delete",    "url": "/wallet/:walletId/comments/:commentId",    "title": "Delete",    "name": "DeleteWalletComment",    "description": "<p>Delete wallet comment</p>",    "group": "WalletComments",    "version": "2.0.0",    "parameter": {      "fields": {        "Request url parameter": [          {            "group": "Request url parameter",            "type": "String",            "optional": false,            "field": "walletId",            "description": "<p>Id of wallet.</p>"          },          {            "group": "Request url parameter",            "type": "String",            "optional": false,            "field": "commentId",            "description": "<p>Id of comment.</p>"          }        ],        "Request message body": [          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>User id who want to delete the comment.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Empty object</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Missing auth credentials.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "403/Forbidden",            "description": "<p>Required field [...] omitted or not have privileges.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "404/NotFound",            "description": "<p>Wallet or comment not found.</p>"          }        ]      },      "examples": [        {          "title": "Forbidden",          "content": "HTTP/1.1 403 Forbidden\n{\n     \"code\": 403,\n     \"message\": \"Non hai sufficienti permessi per cancellare questo commento\",\n     \"requestTime\": \"187ms\"\n}",          "type": "json"        },        {          "title": "Unauthorized",          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"code\": 401,\n    \"requestTime\": \"1ms\"\n}",          "type": "json"        },        {          "title": "Not Found",          "content": "HTTP/1.1 404 Not Found\n{\n    \"code\": 404,\n    \"requestTime\": \"1ms\"\n}",          "type": "json"        }      ]    },    "filename": "app/routes/server-api/wallet-comments.js",    "groupTitle": "WalletComments",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/wallet/:walletId/comments",    "title": "Get",    "name": "GetWalletComments",    "description": "<p>Get list of wallet comments by wallet id</p>",    "group": "WalletComments",    "version": "2.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>An array of wallet comments (see Save wallet comment for response reference)</p>"          }        ]      }    },    "filename": "app/routes/server-api/wallet-comments.js",    "groupTitle": "WalletComments",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/wallet/:walletId/comments",    "title": "Save",    "name": "SaveWalletComment",    "description": "<p>Save new wallet comment</p>",    "group": "WalletComments",    "version": "2.0.0",    "parameter": {      "fields": {        "Request url parameter": [          {            "group": "Request url parameter",            "type": "String",            "optional": false,            "field": "walletId",            "description": "<p>Id of wallet.</p>"          }        ],        "Request message body": [          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "owner",            "description": "<p>Owner of comment.</p>"          },          {            "group": "Request message body",            "type": "String",            "size": "3..3000",            "optional": false,            "field": "comment",            "description": "<p>Comment text</p>"          },          {            "group": "Request message body",            "type": "Object",            "optional": true,            "field": "meta",            "description": "<p>Meta data object</p>"          },          {            "group": "Request message body",            "type": "Object",            "optional": true,            "field": "meta.transaction",            "description": "<p>A transaction ID to be associated with the comment</p>"          },          {            "group": "Request message body",            "type": "Object",            "optional": true,            "field": "meta.onBehalfOf",            "description": "<p>An optional comment sign. Useful when a user comments on behalf of a friend or family member.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data._id",            "description": "<p>Comment id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.comment",            "description": "<p>Comment text.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.owner",            "description": "<p>Owner id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.wallet",            "description": "<p>Wallet id</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200\n{\n \"code\": 200,\n \"data\": {\n     \"_id\": \"605b0787925391857a4ba994\",\n     \"comment\": \"Hello world\",\n     \"owner\": \"60537a1d865597e895215c62\",\n     \"wallet\": \"605a083798cc50530271df78\",\n     \"updatedAt\": \"2021-03-24T09:33:59.112Z\",\n     \"createdAt\": \"2021-03-24T09:33:59.112Z\"\n },\n \"requestTime\": \"194ms\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "400/BadRequest",            "description": "<p>Invalid payload supplied.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Missing auth credentials.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "403/Forbidden",            "description": "<p>Required field [...] omitted.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "404/NotFound",            "description": "<p>Wallet or user not found.</p>"          }        ]      },      "examples": [        {          "title": "Bad Request",          "content": "HTTP/1.1 400 Bad Request\n{\n     \"code\": 400,\n     \"data\": {\n         \"comment\": \"Commento troppo lungo. Sono ammessi 3000 caratteri\"\n     },\n     \"requestTime\": \"187ms\"\n}",          "type": "json"        },        {          "title": "Unauthorized",          "content": "HTTP/1.1 401 Unauthorized\n{\n    \"code\": 401,\n    \"requestTime\": \"1ms\"\n}",          "type": "json"        },        {          "title": "Not Found",          "content": "HTTP/1.1 404 Not Found\n{\n    \"code\": 404,\n    \"requestTime\": \"1ms\"\n}",          "type": "json"        }      ]    },    "filename": "app/routes/server-api/wallet-comments.js",    "groupTitle": "WalletComments",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    }  },  {    "type": "put",    "url": "/wallets/",    "title": "Edit",    "name": "EditWallet",    "description": "<p>Edit a wallet.</p>",    "group": "Wallets",    "version": "2.0.0",    "parameter": {      "fields": {        "Request message body": [          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.expirationDate",            "description": "<p>The expiration date of the wallet (ISODate), after this date no more cashins are accepted (if enforceExpirationDateLimit is true).</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.goalAmount",            "description": "<p>The maximum amount of money the wallet can collect (if enforceGoalAmountLimit is true).</p>"          },          {            "group": "Request message body",            "type": "Bool",            "optional": true,            "field": "data.enforceGoalAmountLimit",            "description": "<p>If false, new cash in will not be blocked (default false)</p>"          },          {            "group": "Request message body",            "type": "Bool",            "optional": true,            "field": "data.enforceExpirationDateLimit",            "description": "<p>If false, cash in after the expiration date will be accepted (default false)</p>"          },          {            "group": "Request message body",            "type": "Bool",            "optional": true,            "field": "data.obfuscateCreditors",            "description": "<p>Hides the name of the contributors <strong>ONLY</strong> in the FRONT END statement calls</p>"          },          {            "group": "Request message body",            "type": "Bool",            "optional": true,            "field": "data.obfuscateCreditedAmounts",            "description": "<p>Hides the amount of the cash in <strong>ONLY</strong> in the FRONT END statement calls</p>"          },          {            "group": "Request message body",            "type": "Bool",            "optional": true,            "field": "data.obfuscateCollectedAmount",            "description": "<p>Hides the amount collected <strong>ONLY</strong> in the FRONT END wallet GET</p>"          },          {            "group": "Request message body",            "type": "Object",            "optional": true,            "field": "data.meta",            "description": "<p>Object containing meta information</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.meta.category",            "description": "<p>An optional wallet category (any string can be used)</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.meta.title",            "description": "<p>An optional wallet title</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.meta.description",            "description": "<p>An optional wallet description (supports a few html tags)</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.meta.shortDescription",            "description": "<p>An optional wallet short description (does not supports html tags)</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.meta.image",            "description": "<p>An optional image id. See &quot;Images&quot; in documentation for reference.</p>"          },          {            "group": "Request message body",            "type": "Object[]",            "optional": true,            "field": "data.meta.quotes",            "description": "<p>An array of quotes. If specified, user can only cashin using the amounts specified in this array</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "data.meta.quotes.title",            "description": "<p>The title of the quote</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "data.meta.quotes.description",            "description": "<p>The description of the quote</p>"          },          {            "group": "Request message body",            "type": "Number",            "optional": false,            "field": "data.meta.quotes.amount",            "description": "<p>The amount of the quote</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data._id",            "description": "<p>Wallet id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "data.amount",            "description": "<p>Wallet credit in cents</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.owner",            "description": "<p>User id of the owner</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.currency",            "description": "<p>Wallet currency. <br>EUR: Euro. (default)<br>GBP: Pound Sterling.</p>"          }        ]      }    },    "filename": "app/routes/server-api/wallets.js",    "groupTitle": "Wallets",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/wallets/:id",    "title": "Get",    "name": "GetWallet",    "description": "<p>Get a wallet by ID.</p>",    "group": "Wallets",    "version": "2.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Wallet asset (see Save wallet for response reference)</p>"          }        ]      }    },    "filename": "app/routes/server-api/wallets.js",    "groupTitle": "Wallets",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/wallets/:id/statement",    "title": "Statement",    "name": "GetWalletStatement",    "description": "<p>Get a wallet statement, paginated and sorted by createdAt. Only Succeeded transactions are included in this statement. If you need to verify pending/failed transactions you need to query them individually.</p>",    "group": "Wallets",    "version": "2.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>An array of succeeded transactions (see Get transaction for response reference)</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pagination",            "description": ""          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "pagination.perPage",            "description": "<p>Number of items per page.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "pagination.total",            "description": "<p>Number of items total.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "pagination.page",            "description": "<p>The current page.</p>"          }        ]      }    },    "filename": "app/routes/server-api/wallets.js",    "groupTitle": "Wallets",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    },    "parameter": {      "fields": {        "Query String": [          {            "group": "Query String",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>The desired result page starting from 0.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/wallets",    "title": "List",    "name": "ListWallets",    "description": "<p>Get a list of your wallets, paginated and sorted by createdAt. <strong>Keep in mind that the amount field of each wallet in the list, is updated to the last time a GET to the single wallet was done. This means that you cannot trust the value as it might be old, a single GET to wallet is mandatory in order to get the updated value.</strong> <br/><strong style=\"color:red;\">This method is not intended for regular use, usage rates are heavily limited. Use only for debug.</strong></p>",    "group": "Wallets",    "version": "2.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>An array of wallets (see Get Wallet for response reference)</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pagination",            "description": ""          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "pagination.perPage",            "description": "<p>Number of items per page.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "pagination.total",            "description": "<p>Number of items total.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "pagination.page",            "description": "<p>The current page.</p>"          }        ]      }    },    "filename": "app/routes/server-api/wallets.js",    "groupTitle": "Wallets",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    },    "parameter": {      "fields": {        "Query String": [          {            "group": "Query String",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>The desired result page starting from 0.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/wallets/",    "title": "Save",    "name": "SaveWallet",    "description": "<p>Save a new wallet.</p>",    "group": "Wallets",    "version": "2.0.0",    "parameter": {      "fields": {        "Request message body": [          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "data.owner",            "description": "<p>The User id of the owner of the wallet</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.expirationDate",            "description": "<p>The expiration date of the wallet (ISODate), after this date no more cashins are accepted (if enforceExpirationDateLimit is true).</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.goalAmount",            "description": "<p>The maximum amount of money the wallet can collect (if enforceGoalAmountLimit is true).</p>"          },          {            "group": "Request message body",            "type": "Bool",            "optional": true,            "field": "data.enforceGoalAmountLimit",            "description": "<p>If false, new cash in will not be blocked (default false)</p>"          },          {            "group": "Request message body",            "type": "Bool",            "optional": true,            "field": "data.enforceExpirationDateLimit",            "description": "<p>If false, cash in after the expiration date will be accepted (default false)</p>"          },          {            "group": "Request message body",            "type": "Bool",            "optional": true,            "field": "data.obfuscateCreditors",            "description": "<p>Hides the name of the contributors <strong>ONLY</strong> in the FRONT END statement calls</p>"          },          {            "group": "Request message body",            "type": "Bool",            "optional": true,            "field": "data.obfuscateCreditedAmounts",            "description": "<p>Hides the amount of the cash in <strong>ONLY</strong> in the FRONT END statement calls</p>"          },          {            "group": "Request message body",            "type": "Bool",            "optional": true,            "field": "data.obfuscateCollectedAmount",            "description": "<p>Hides the amount collected <strong>ONLY</strong> in the FRONT END wallet GET</p>"          },          {            "group": "Request message body",            "type": "Object",            "optional": true,            "field": "data.meta",            "description": "<p>Object containing meta information</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.meta.category",            "description": "<p>An optional wallet category (any string can be used)</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.meta.title",            "description": "<p>An optional wallet title</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.meta.description",            "description": "<p>An optional wallet description (supports a few html tags)</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.meta.shortDescription",            "description": "<p>An optional wallet short description (does not supports html tags)</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": true,            "field": "data.meta.image",            "description": "<p>An optional image id. See &quot;Images&quot; in documentation for reference.</p>"          },          {            "group": "Request message body",            "type": "Object[]",            "optional": true,            "field": "data.meta.quotes",            "description": "<p>An array of quotes. If specified, user can only cashin using the amounts specified in this array</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "data.meta.quotes.title",            "description": "<p>The title of the quote</p>"          },          {            "group": "Request message body",            "type": "String",            "optional": false,            "field": "data.meta.quotes.description",            "description": "<p>The description of the quote</p>"          },          {            "group": "Request message body",            "type": "Number",            "optional": false,            "field": "data.meta.quotes.amount",            "description": "<p>The amount of the quote</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data._id",            "description": "<p>Wallet id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "data.amount",            "description": "<p>Wallet credit in cents</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.owner",            "description": "<p>User id of the owner</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.currency",            "description": "<p>Wallet currency. <br>EUR: Euro. (default)<br>GBP: Pound Sterling.</p>"          }        ]      }    },    "filename": "app/routes/server-api/wallets.js",    "groupTitle": "Wallets",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Authorization",            "description": "<p>credentials</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "401/Unauthorized",            "description": "<p>Invalid basic auth credentials supplied.</p>"          }        ]      }    }  }]
